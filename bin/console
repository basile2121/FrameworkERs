#!/usr/bin/env php
<?php

// Inclut l'autoloader généré par Composer
require_once __DIR__ . "/../vendor/autoload.php";

use App\Commands\GenerateFixtures;
use Symfony\Component\Console\Application;
use Faker\Factory;
use App\Utils\Hydrator;
use App\Config\PdoConnection;
use App\DependencyInjection\Container;
use Symfony\Component\Dotenv\Dotenv;

use App\Repository\AdressesRepository;
use App\Repository\AppartientRepository;
use App\Repository\CategoriesRepository;
use App\Repository\EcolesRepository;
use App\Repository\EvenementsRepository;
use App\Repository\MediasRepository;
use App\Repository\ParticipeRepository;
use App\Repository\PromotionsRepository;
use App\Repository\RolesRepository;
use App\Repository\StatutsRepository;
use App\Repository\UtilisateursRepository;



$dotenv = new Dotenv();
$dotenv->loadEnv(__DIR__ . '/../.env');

// PDO
$pdoConnection = new PdoConnection();
$hydrator = new Hydrator();
$pdoConnection->init(); // Connexion à la BDD

// Repository
$utilisateursRepository = new UtilisateursRepository($pdoConnection->getPdoConnection(), $hydrator);
$statutsRepository = new StatutsRepository($pdoConnection->getPdoConnection(), $hydrator);
$rolesRepository = new RolesRepository($pdoConnection->getPdoConnection(), $hydrator);
$promotionsRepository = new PromotionsRepository($pdoConnection->getPdoConnection(), $hydrator);
$participeRepository = new ParticipeRepository($pdoConnection->getPdoConnection(), $hydrator);
$mediasRepository = new MediasRepository($pdoConnection->getPdoConnection(), $hydrator);
$evenementsRepository = new EvenementsRepository($pdoConnection->getPdoConnection(), $hydrator);
$ecolesRepository = new EcolesRepository($pdoConnection->getPdoConnection(), $hydrator);
$categoriesRepository = new CategoriesRepository($pdoConnection->getPdoConnection(), $hydrator);
$appartientRepository = new AppartientRepository($pdoConnection->getPdoConnection(), $hydrator);
$adressesRepository = new AdressesRepository($pdoConnection->getPdoConnection(), $hydrator);

// Faker
$faker = Factory::create('fr_FR');

// Service Container
$container = new Container();
$container->set(UtilisateursRepository::class, $utilisateursRepository);
$container->set(StatutsRepository::class, $statutsRepository);
$container->set(RolesRepository::class, $rolesRepository);
$container->set(ParticipeRepository::class, $participeRepository);
$container->set(MediasRepository::class, $mediasRepository);
$container->set(EvenementsRepository::class, $evenementsRepository);
$container->set(EcolesRepository::class, $ecolesRepository);
$container->set(CategoriesRepository::class, $categoriesRepository);
$container->set(AppartientRepository::class, $appartientRepository);
$container->set(AdressesRepository::class, $adressesRepository);
$container->set(PromotionsRepository::class, $promotionsRepository);
$container->set(Factory::class, $faker);

$application = new Application();
$application->add(new GenerateFixtures($container));
$application->run();


